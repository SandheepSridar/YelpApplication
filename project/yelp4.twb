<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='yelp1' inline='true' name='federated.0lav5n41b8799413x7h9i0f73sqi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yelp1' name='semistructpassivestore-direct.0phw0fo0rbfivz1f35nw00beq844'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Sandheep Sridar/OneDrive/Desktop/Fall 2019/Adv DBMS/project' filename='yelp1.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[yelp1.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[yelp3.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0phw0fo0rbfivz1f35nw00beq844' name='yelp1.json' table='[yelp1.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[yelp1.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>businessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[businessName]</local-name>
            <parent-name>[yelp1.json]</parent-name>
            <remote-alias>businessName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[yelp1.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[yelp1.json]</parent-name>
            <remote-alias>rating</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>130</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[yelp1.json]</parent-name>
            <remote-alias>stars</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[yelp1.json]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[yelp1.json]</parent-name>
            <remote-alias>zip</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Business Name' datatype='string' name='[businessName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>businessName</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>rating</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>stars</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>state</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Zip' datatype='string' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>zip</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Yelp1' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[businessName]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[rating]' type='field' />
        <folder-item name='[stars]' type='field' />
        <folder-item name='[state]' type='field' />
        <folder-item name='[zip]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.594017' measure-ordering='alphabetic' measure-percentage='0.405983' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yelp2' inline='true' name='federated.0yteyd609e57rp18mdf1q0nnsk1o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yelp2' name='semistructpassivestore-direct.0ihrui21e7rwns1eiymi71mfhtmy'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Sandheep Sridar/OneDrive/Desktop/Fall 2019/Adv DBMS/project' filename='yelp2.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[yelp1.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[yelp2.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[yelp4.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0ihrui21e7rwns1eiymi71mfhtmy' name='yelp4.json' table='[yelp4.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[yelp4.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[yelp4.json]</parent-name>
            <remote-alias>categories</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>130</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[yelp4.json]</parent-name>
            <remote-alias>stars</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[yelp4.json]</parent-name>
            <remote-alias>zip</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>categories</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>stars</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Zip' datatype='string' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>zip</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Yelp4' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[categories]' type='field' />
        <folder-item name='[stars]' type='field' />
        <folder-item name='[zip]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.592593' measure-ordering='alphabetic' measure-percentage='0.407407' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='yelp2' name='federated.0yteyd609e57rp18mdf1q0nnsk1o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0yteyd609e57rp18mdf1q0nnsk1o'>
            <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>categories</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[categories]' derivation='None' name='[none:categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[stars]' derivation='None' name='[none:stars:nk]' pivot='key' type='nominal' />
            <column-instance column='[zip]' derivation='None' name='[none:zip:nk]' pivot='key' type='nominal' />
            <column caption='Stars' datatype='string' name='[stars]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>stars</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Zip' datatype='string' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>zip</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:zip:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:categories:nk] / [federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:stars:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{BABC7A11-EEEA-4CBC-93B1-56B3E5A6A176}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:Document Index (generated):ok]</field>
            <field>[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:businessName:nk]</field>
            <field>[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:categories:nk]</field>
            <field>[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:rating:nk]</field>
            <field>[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:stars:nk]</field>
            <field>[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:state:nk]</field>
            <field>[federated.0yteyd609e57rp18mdf1q0nnsk1o].[none:zip:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67B28137-AB24-47F0-A810-BC3EB7A26B8E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
